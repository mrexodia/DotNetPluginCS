<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AssemblyName>$(PluginAssemblyName)</AssemblyName>
    <RootNamespace>$(PluginRootNamespace)</RootNamespace>
    <TargetFramework>net472</TargetFramework>
    <Platforms>x86;x64</Platforms>
    <OutputPath>..\bin\$(Platform)\$(Configuration)\</OutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <AssemblyTitle>$(PluginName)</AssemblyTitle>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Platform)'=='x86'">
    <DefineConstants>X86;$(DefineConstants)</DefineConstants>
    <CustomTargetExt>.dp32</CustomTargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Platform)'=='x64'">
    <DefineConstants>AMD64;$(DefineConstants)</DefineConstants>
    <CustomTargetExt>.dp64</CustomTargetExt>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <AllowUnloading>true</AllowUnloading>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(AllowUnloading)'=='true'">
      <PropertyGroup>
        <DefineConstants>ALLOW_UNLOADING;$(DefineConstants)</DefineConstants>
      </PropertyGroup>
      <ItemGroup>
        <ProjectReference Include="..\DotNetPlugin.RemotingHelper\DotNetPlugin.RemotingHelper.csproj" />
      </ItemGroup>
    </When>
  </Choose>

  <PropertyGroup>
    <DllExportIdent>332F9911-3C74-44E1-8ADC-5A1E19FE3F7E</DllExportIdent>
    <DllExportMetaLibName>DllExport.dll</DllExportMetaLibName>
    <DllExportNamespace>RGiesecke.DllExport</DllExportNamespace>
    <DllExportDDNSCecil>true</DllExportDDNSCecil>
    <DllExportSkipOnAnyCpu>false</DllExportSkipOnAnyCpu>
    <DllExportPlatform>Auto</DllExportPlatform>
    <DllExportOrdinalsBase>1</DllExportOrdinalsBase>
    <DllExportGenExpLib>false</DllExportGenExpLib>
    <DllExportOurILAsm>false</DllExportOurILAsm>
    <DllExportSysObjRebase>false</DllExportSysObjRebase>
    <DllExportLeaveIntermediateFiles>true</DllExportLeaveIntermediateFiles>
    <DllExportTimeout>30000</DllExportTimeout>
    <DllExportPeCheck>2</DllExportPeCheck>
    <DllExportPatches>0</DllExportPatches>
    <DllExportPreProcType>0</DllExportPreProcType>
    <DllExportPostProcType>0</DllExportPostProcType>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="DllExport">
      <Version>1.7.4</Version>
      <Visible>false</Visible>
      <Wz>1</Wz>
    </PackageReference>
  </ItemGroup>

  <ImportGroup Label=".NET DllExport">
    <Import Project="$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets" Condition="Exists($([MSBuild]::Escape('$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets')))" Label="8337224c9ad9e356" />
  </ImportGroup>
  <Target Name="DllExportRestorePkg" BeforeTargets="PrepareForBuild">
    <Error Condition="!Exists('$(SolutionDir)DllExport.bat')" Text="DllExport.bat is not found. Path: '$(SolutionDir)' - https://github.com/3F/DllExport" />
    <Exec Condition="('$(DllExportModImported)' != 'true' Or !Exists('$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets')) And Exists('$(SolutionDir)DllExport.bat')" Command=".\DllExport.bat  -action Restore" WorkingDirectory="$(SolutionDir)" />
    <MSBuild Condition="'$(DllExportModImported)' != 'true'" Projects="$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets" Targets="DllExportMetaXBaseTarget" Properties="TargetFramework=$(TargetFramework)">
      <Output TaskParameter="TargetOutputs" PropertyName="DllExportMetaXBase" />
    </MSBuild>
    <ItemGroup>
      <Reference Include="DllExport, PublicKeyToken=8337224c9ad9e356">
        <HintPath>$(SolutionDir)packages\DllExport.1.7.4\gcache\$(DllExportMetaXBase)\$(DllExportNamespace)\$(DllExportMetaLibName)</HintPath>
        <Private>False</Private>
        <SpecificVersion>False</SpecificVersion>
      </Reference>
    </ItemGroup>
  </Target>
  <Target Name="DllExportRPkgDynamicImport" BeforeTargets="PostBuildEvent" DependsOnTargets="GetFrameworkPaths" Condition="'$(DllExportModImported)' != 'true' And '$(DllExportRPkgDyn)' != 'false'">
    <MSBuild BuildInParallel="true" UseResultsCache="true" Projects="$(MSBuildProjectFullPath)" Properties="DllExportRPkgDyn=true" Targets="Build" />
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <!-- NOTE: we cannot simply override TargetExt because that breaks DllExport -->
    <Copy SourceFiles="$(TargetPath)" DestinationFiles="$(TargetDir)$(TargetName)$(CustomTargetExt)" />
  </Target>
</Project>