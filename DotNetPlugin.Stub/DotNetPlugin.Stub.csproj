<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AssemblyName>$(PluginAssemblyName)</AssemblyName>
    <RootNamespace>$(PluginRootNamespace)</RootNamespace>
    <TargetFramework>net472</TargetFramework>
    <Platforms>x86;x64</Platforms>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <AssemblyTitle>$(PluginName)</AssemblyTitle>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Platform)'=='x86'">
    <DefineConstants>X86;$(DefineConstants)</DefineConstants>
    <CustomTargetExt>.dp32</CustomTargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Platform)'=='x64'">
    <DefineConstants>AMD64;$(DefineConstants)</DefineConstants>
    <CustomTargetExt>.dp64</CustomTargetExt>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(AllowUnloading)'=='true'">
      <PropertyGroup>
        <DefineConstants>ALLOW_UNLOADING;$(DefineConstants)</DefineConstants>
      </PropertyGroup>

      <ItemGroup>
        <ProjectReference Include="..\DotNetPlugin.RemotingHelper\DotNetPlugin.RemotingHelper.csproj" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- Writes the target path of the Impl assembly to file and embeds that file as a resource in the current assembly. -->

  <Target Name="GenerateBuildMetadata" BeforeTargets="BeforeBuild" Condition="'$(AllowUnloading)'=='true'">
    <PropertyGroup>
      <BuildMetadataFileName>build.meta</BuildMetadataFileName>
      <BuildMetadataFilePath>$(IntermediateOutputPath)$(BuildMetadataFileName)</BuildMetadataFilePath>
      <ImplTargetPath>$([System.IO.Path]::GetFullPath($(PluginOutputPath)))$(TargetName).Impl$(TargetExt)</ImplTargetPath>
    </PropertyGroup>

    <ReadLinesFromFile File="$(BuildMetadataFilePath)" ContinueOnError="true">
      <Output TaskParameter="Lines" PropertyName="BuildMetadataContent" />
    </ReadLinesFromFile>

    <WriteLinesToFile File="$(BuildMetadataFilePath)" Lines="$(ImplTargetPath)" Overwrite="true" Condition="'$(BuildMetadataContent)' != '$(ImplTargetPath)'">
    </WriteLinesToFile>

    <ItemGroup>
      <EmbeddedResource Include="$(BuildMetadataFilePath)">
        <LogicalName>$(BuildMetadataFileName)</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <!-- DLL exports rewriting  -->

  <PropertyGroup>
    <DllExportMetaLibName>DllExport.dll</DllExportMetaLibName>
    <DllExportNamespace>RGiesecke.DllExport</DllExportNamespace>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="DllExport">
      <Version>1.7.4</Version>
      <Visible>false</Visible>
      <Wz>1</Wz>
    </PackageReference>
  </ItemGroup>

  <ImportGroup Label=".NET DllExport">
    <Import Project="$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets" Condition="Exists($([MSBuild]::Escape('$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets')))" Label="8337224c9ad9e356" />
  </ImportGroup>

  <Target Name="DllExportRestorePkg" BeforeTargets="PrepareForBuild">
    <Error Condition="!Exists('$(SolutionDir)DllExport.bat')" Text="DllExport.bat is not found. Path: '$(SolutionDir)' - https://github.com/3F/DllExport" />
    <Exec Condition="('$(DllExportModImported)' != 'true' Or !Exists('$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets')) And Exists('$(SolutionDir)DllExport.bat')" Command=".\DllExport.bat  -action Restore" WorkingDirectory="$(SolutionDir)" />
    <MSBuild Condition="'$(DllExportModImported)' != 'true'" Projects="$(SolutionDir)packages\DllExport.1.7.4\tools\net.r_eg.DllExport.targets" Targets="DllExportMetaXBaseTarget" Properties="TargetFramework=$(TargetFramework)">
      <Output TaskParameter="TargetOutputs" PropertyName="DllExportMetaXBase" />
    </MSBuild>
    <ItemGroup>
      <Reference Include="DllExport, PublicKeyToken=8337224c9ad9e356">
        <HintPath>$(SolutionDir)packages\DllExport.1.7.4\gcache\$(DllExportMetaXBase)\$(DllExportNamespace)\$(DllExportMetaLibName)</HintPath>
        <Private>False</Private>
        <SpecificVersion>False</SpecificVersion>
      </Reference>
    </ItemGroup>
  </Target>

  <Target Name="DllExportMod">
    <!-- Suppress actual IL rewriting because we want to do that at a later stage (see DotNetPlugin.Impl) -->
  </Target>
</Project>